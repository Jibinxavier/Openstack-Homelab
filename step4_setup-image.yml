--- 
- name: Pre-req
  hosts: controller
  remote_user: "jibin"
  become: true
  tasks:
    - fail: msg="This play requires vault_token use --extra  --extra-vars 'vault_token=<token>'"

      when: vault_token is not defined
 
- name:  Get passwords
  hosts: controller
  remote_user: "jibin"
  tasks:
  
 
    - name: Retrieving mysql pass from vault

      set_fact: MYSQL_PASS="{{ lookup('hashi_vault', 'secret=kv/openstack-deploy/MYSQL_PASS:value auth_method=token token={{vault_token}} url=https://192.168.9.1:8200') }}"
    - name: Retrieving GLANCE_DBPASS db pass  from vault

      set_fact: GLANCE_DBPASS="{{ lookup('hashi_vault', 'secret=kv/openstack-deploy/GLANCE_DBPASS:value auth_method=token token={{vault_token}} url=https://192.168.9.1:8200') }}"

    - name: Retrieving GLANCE_PASS user pass  from vault

      set_fact: GLANCE_PASS="{{ lookup('hashi_vault', 'secret=kv/openstack-deploy/GLANCE_PASS:value auth_method=token token={{vault_token}} url=https://192.168.9.1:8200') }}"
    - name: Retrieving keystone admin user pass  from vault

      set_fact: KEYSTONE_ADMIN_PASS="{{ lookup('hashi_vault', 'secret=kv/openstack-deploy/KEYSTONE_ADMIN_PASS:value auth_method=token token={{vault_token}} url=https://192.168.9.1:8200') }}"

- name:  Setup mysql pre-req for glance system (identity)
  hosts: controller
  remote_user: "jibin"
  become: true 
  tasks: 
 
    
    
    - name: Create a new database with name 'glance'
      mysql_db:
        name: glance
        login_user: root 
        login_password: "{{MYSQL_PASS}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        state: present

      
 

    - name: Create glance user with password, grant on glance database
      mysql_user:
        state: present
        name: glance
        password: "{{GLANCE_DBPASS}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        login_user: root
        login_password: "{{MYSQL_PASS}}"
        host: "{{item}}"
        priv:  
          "glance.*:ALL,GRANT" 
      with_items:
        - localhost
        - '%'
      no_log: true 

# using https://docs.ansible.com/ansible/2.10/collections/openstack/cloud/endpoint_module.html
- name: Create glance user and it project
  hosts: controller
  remote_user: "jibin"
  become: true 
 
  vars:
    os_env:
      OS_USERNAME: admin
      OS_PASSWORD: "{{KEYSTONE_ADMIN_PASS}}"
      OS_PROJECT_NAME: admin
      OS_USER_DOMAIN_NAME: Default
      OS_PROJECT_DOMAIN_NAME: Default
      OS_AUTH_URL: http://controller:5000/v3
      OS_IDENTITY_API_VERSION: 3

  tasks:
    - name: Create glance user 
      os_user:
        state: present
        name: glance
        password: "{{GLANCE_PASS}}" 
        domain: default 
      environment: "{{ os_env }}"
    - name: assign glance admin role 
      os_user_role: 
        user: glance
        role: admin
        project: service
      environment: "{{ os_env }}"
    - name: Create service entity for glance  
      os_keystone_service: 
        state: present
        name: glance
        service_type: image
        description: OpenStack Image Service
      environment: "{{ os_env }}"

    - name: Create a PUBLIC service endpoint for glance
      openstack.cloud.endpoint: 
        service: glance
        endpoint_interface: public
        url: http://controller:9292
        region: RegionOne
        state: present
      environment: "{{ os_env }}"

    - name: Create an INTERNAL service endpoint for glance
      openstack.cloud.endpoint: 
        service: glance
        endpoint_interface: internal
        url: http://controller:9292
        region: RegionOne
        state: present
      environment: "{{ os_env }}"

    - name: Create an ADMIN service endpoint for glance
      openstack.cloud.endpoint: 
        service: glance
        endpoint_interface: admin
        url: http://controller:9292
        region: RegionOne
        state: present
      environment: "{{ os_env }}"


- name: Install and configure glance components 
  hosts: controller
  remote_user: "jibin"
  become: true 
  tasks: 
    - name: Install glance
      apt:
        name:  glance
        state: present 

    - name: Configure database, keystone (identity), pastedeploy, and glance store for glance
      template:
        src: "{{ playbook_dir }}/configs/templates/glance.ini.j2"
        dest: "/etc/glance/glance-api.conf"
        mode: '0640'
    - name: Create system user "glance"  and glance group
      user:
        name: glance 
        groups: glance 
        system: yes
    - name: Populate the Image service database
      shell: 'su -s /bin/sh -c "glance-manage db_sync" glance'
    - name: Restart glance-api 
      systemd:
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: glance-api

