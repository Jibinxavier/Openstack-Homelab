--- 
- name: Pre-req
  hosts: controller
  remote_user: "jibin"
  become: true # needs become true for retrieving secrets otherwise" unable to get local issuer certificate "
  tasks:
    - include_vars:  dir=vars 

    - name: Fail if vault_token not set
      fail: msg="This play requires vault_token use --extra  --extra-vars 'vault_token=<token>'" 
      when: vault_token is not defined 
    - name: Retrieving secrets  from vault
      uri:
        url: "{{vault_addr}}{{item}}"
        method: GET
        headers:
          X-Vault-Token: "{{vault_token}}"

      with_items:
        - /v1/kv/openstack-deploy/MYSQL_PASS  
        - /v1/kv/openstack-deploy/NEUTRON_DBPASS  
        - /v1/kv/openstack-deploy/NEUTRON_PASS 
        - /v1/kv/openstack-deploy/KEYSTONE_ADMIN_PASS 
      register: output

    - name: Set MYSQL_PASS, NEUTRON_DBPASS, NEUTRON_PASS, KEYSTONE_ADMIN_PASS 
      set_fact: 
        MYSQL_PASS: "{{output.results[0].json.data.value}}" 
        NEUTRON_DBPASS:   "{{output.results[1].json.data.value}}" 
        NEUTRON_PASS:   "{{output.results[2].json.data.value}}" 
        KEYSTONE_ADMIN_PASS: "{{output.results[3].json.data.value}}"    

- name:  Setup mysql pre-req for neturon  
  hosts: controller
  remote_user: "jibin"
  become: true 
  tasks: 
    - name: Create a new neturon databases 
      mysql_db:
        name: "{{item}}"
        login_user: root 
        login_password: "{{MYSQL_PASS}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        state: present
      with_items:
        - neutron 

    - name: Create neutron dbuser with password, grant on neturon 
      mysql_user:
        state: present
        name: neutron
        password: "{{NEUTRON_DBPASS}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        login_user: root
        login_password: "{{MYSQL_PASS}}"
        host: "{{item.host}}"
        append_privs: yes
        priv:  
          "{{item.priv}}"
      with_items:
        - {host: 'localhost', priv: "neutron.*:ALL,GRANT"}
        - {host: '%', priv: "neutron.*:ALL,GRANT"} 
      no_log: true


- name: Create neutron user and it project
  hosts: controller
  remote_user: "jibin"
  become: true 

  vars:
    os_env:
      OS_USERNAME: admin
      OS_PASSWORD: "{{KEYSTONE_ADMIN_PASS}}"
      OS_PROJECT_NAME: admin
      OS_USER_DOMAIN_NAME: Default
      OS_PROJECT_DOMAIN_NAME: Default
      OS_AUTH_URL: http://controller:5000/v3
      OS_IDENTITY_API_VERSION: 3

  tasks:
    - name: Create neutron user 
      os_user:
        state: present
        name: neutron
        password: "{{NEUTRON_PASS}}" 
        domain: default 
      environment: "{{ os_env }}"
      no_log: true
    - name: assign neutron admin role 
      os_user_role: 
        user: neutron
        role: admin
        project: service
      environment: "{{ os_env }}"

    - name: Create service entity for neutron  
      os_keystone_service: 
        state: present
        name: neutron
        service_type: network
        description: "OpenStack Networking"

      environment: "{{ os_env }}"

    - name: Create a PUBLIC,INTERNAL,ADMIN service endpoints for compute
      openstack.cloud.endpoint: 
        service: neutron
        endpoint_interface: "{{item}}"
        url: http://controller:9696
        region: RegionOne
        state: present
      with_items:
        - public
        - internal
        - admin
      environment: "{{ os_env }}"



