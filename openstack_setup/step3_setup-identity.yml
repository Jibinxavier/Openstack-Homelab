
- name:  Get passwords
  hosts: controller
  become: true # needs become true for retrieving secrets otherwise" unable to get local issuer certificate "
  remote_user: "jibin"
  tasks:
    - include_vars:  dir=vars 

    - name: Fail if vault_token not set
      fail: msg="This play requires vault_token use --extra  --extra-vars 'vault_token=<token>'" 
      when: vault_token is not defined 
    
    - name: Retrieving mysql keystone pass from vault
      uri:
        url: "{{vault_addr}}{{item}}"
        method: GET
        headers:
          X-Vault-Token: "{{vault_token}}"

      with_items:
        - /v1/kv/openstack-deploy/MYSQL_PASS  
        - /v1/kv/openstack-deploy/KEYSTONE_ADMIN_PASS  
      register: output

    - name: Set mysql keystone pass
      set_fact: 
        MYSQL_PASS: "{{output.results[0].json.data.value}}" 
        KEYSTONE_ADMIN_PASS:   "{{output.results[1].json.data.value}}" 
        
- name:  Setup mysql pre-req for keystone system (identity)
  hosts: controller
  remote_user: "jibin"
  become: true 
  tasks: 
    - name: Install apache2
      apt:
        name: 
          - apache2
          - libapache2-mod-wsgi-py3 
        state: present 
    
    
    - name: Create a new database with name 'keystone'
      mysql_db:
        name: keystone
        login_user: root 
        login_password: "{{MYSQL_PASS}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        state: present

      
 

    - name: Create keystone user with password, grant on keystone database
      mysql_user:
        state: present
        name: keystone
        password: "{{KEYSTONE_ADMIN_PASS}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock 
        login_user: root
        login_password: "{{MYSQL_PASS}}"
        host: "{{item}}"
        priv:  
          "keystone.*:ALL,GRANT" 
      with_items:
        - localhost
        - '%'

- name:  Setup keystone system (identity)
  hosts: controller
  remote_user: "jibin"
  become: true 
  tasks: 
    - name: Install keystone
      apt:
        name: 
          - keystone
        state: present 
    
    - name:  Configure database access for keystone
      lineinfile:
        path: /etc/keystone/keystone.conf
        regexp: '^connection ='  
        line: "connection = mysql+pymysql://keystone:{{KEYSTONE_ADMIN_PASS}}@controller/keystone"
    
    - name:  Configure the Fernet token provider
      lineinfile:
        path: /etc/keystone/keystone.conf 
        insertafter: '^\[token\]'  
        line: "provider = fernet"
        state: present 

    - name: Create system user "keystone"  and keystone group
      user:
        name: keystone 
        groups: keystone 
        system: yes


    - name: Populate the Identity service database
      shell: 'su -s /bin/sh -c "keystone-manage db_sync" keystone'
    


    - name: Initialize Fernet key repositories [1/2] - fernet_setup
      command: >
            keystone-manage fernet_setup --keystone-user keystone   --keystone-group keystone

    - name: Initialize Fernet key repositories [2/2] - credential_setup           
      command: >                  
            keystone-manage credential_setup --keystone-user keystone  --keystone-group keystone

    - name: Bootstrap the Identity service       
      command: >                  
            keystone-manage bootstrap --bootstrap-password "{{KEYSTONE_ADMIN_PASS}}" \
            --bootstrap-admin-url http://controller:5000/v3/ \
            --bootstrap-internal-url http://controller:5000/v3/ \
            --bootstrap-public-url http://controller:5000/v3/ \
            --bootstrap-region-id RegionOne

 

- name: Configure the Apache HTTP server
  hosts: controller
  remote_user: "jibin"
  become: true 
  tasks:

    - name:  Configure the ServerName option to reference the controller node
      lineinfile:
        path: /etc/apache2/apache2.conf
        regexp: 'ServerName controller'  
        line: "ServerName controller"
    - name: Start apache2 
      systemd:
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: apache2





# https://docs.openstack.org/keystone/victoria/install/keystone-verify-ubuntu.html
- name: Create a domain, projects, users, and roles
  hosts: controller
  remote_user: "jibin"
  become: true  
  vars:
    os_env:
      OS_USERNAME: admin
      OS_PASSWORD: "{{KEYSTONE_ADMIN_PASS}}"
      OS_PROJECT_NAME: admin
      OS_USER_DOMAIN_NAME: Default
      OS_PROJECT_DOMAIN_NAME: Default
      OS_AUTH_URL: http://controller:5000/v3
      OS_IDENTITY_API_VERSION: 3



  tasks:



    - name: Get ddefault domain
      openstack.cloud.identity_domain_info:
 
        name: default
      environment: "{{ os_env }}"
      register: domain_details


    - name: Create project 
      os_project: 
        state: present
        name: service
        description: "Service Project"
        domain_id: "{{domain_details.openstack_domains.id}}"
        enabled: True
      environment: "{{ os_env }}"

    - name: Add new user Jibin
      openstack.cloud.identity_user: 
        state: present
        name: jibin
        password: jibin 
        domain: default 
      environment: "{{ os_env }}"
    
    - name: Add new user Jibin add admin
      openstack.cloud.role_assignment: 
        user: jibin
        role: admin
        project: admin
      environment: "{{ os_env }}"

    - name: Authenticate to get a token 
      os_auth:
      register: out
      environment: "{{ os_env }}"
    - debug:
        msg: "{{out}}"